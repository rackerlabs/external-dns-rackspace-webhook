name: release

on:
  push:
    tags:
      - "*" # run on any tag push

permissions:
  contents: write
  id-token: write
  packages: write
  id-token: write

jobs:
  container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed for goreleaser (tags)

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Install syft
        uses: anchore/sbom-action/download-syft@61119d458adab75f756bc0b9e4bde25725f86a7a # v0.17.2

      - name: Install cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Package and push Helm chart
        run: |
          PKG_VER=${GITHUB_REF_NAME#v}

          # update Chart.yaml with tag version
          sed -i \
            -e "s/^appVersion:.*/appVersion: ${PKG_VER}/" \
            -e "s/^version:.*/version: ${PKG_VER}/" \
            charts/external-dns-rackspace-webhook/Chart.yaml

          # package chart
          helm package -u -d . charts/external-dns-rackspace-webhook

          # push chart to ghcr.io
          helm push external-dns-rackspace-webhook-${PKG_VER}.tgz \
            oci://ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts