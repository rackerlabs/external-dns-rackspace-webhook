name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read
  checks: write 
  id-token: write

jobs:
  go-mod:
    name: Verify Go modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: Check go.mod and go.sum are tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod
          git diff --exit-code go.sum

  test:
    name: Run tests
    if: github.event.pull_request.head.repo.fork != true # only run on non-forks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Run tests
        run: make test
        env:
          OS_USERNAME: ${{ secrets.OS_USERNAME }}
          RAX_API_KEY: ${{ secrets.RAX_API_KEY }}

  build:
    name: Build (snapshot)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: Install syft
        uses: anchore/sbom-action/download-syft@f8bdd1d8ac5e901a77a92f111440fdb1b593736b # v0.20.6

      - name: Install cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Run GoReleaser (snapshot)
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean --skip=publish --snapshot

  chart:
    name: Lint Helm charts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history for chart-testing

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.17.0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Detect changed charts
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch "${{ github.event.repository.default_branch }}")
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --check-version-increment=false --target-branch "${{ github.event.repository.default_branch }}"
