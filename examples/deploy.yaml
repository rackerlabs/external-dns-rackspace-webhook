# Secret for Rackspace credentials
apiVersion: v1
kind: Secret
metadata:
  name: external-dns-rackspace-webhook
  namespace: external-dns
type: Opaque
stringData:
  username: "your-username"
  api-key: "your-api-key"

---
# ServiceAccount for external-dns
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: external-dns
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns

---
# ClusterRole for external-dns
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns
rules:
  - apiGroups: [""]
    resources: ["services","endpoints","pods", "nodes"]
    verbs: ["get","list","watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get","list","watch"]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["get","list","watch"]
  
---
# ClusterRoleBinding for external-dns
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: external-dns

---
# Service for external-dns (optional, for monitoring)
apiVersion: v1
kind: Service
metadata:
  name: external-dns
  namespace: external-dns
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns
  ports:
  - name: http
    port: 7979
    targetPort: http
    protocol: TCP

---
# Deployment for external-dns with Rackspace webhook
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: external-dns
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: external-dns
      app.kubernetes.io/instance: external-dns
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-dns
        app.kubernetes.io/instance: external-dns
    spec:
      serviceAccountName: external-dns
      securityContext:
        fsGroup: 65534
      containers:
      # External DNS main container
      - name: external-dns
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: registry.k8s.io/external-dns/external-dns:v0.18.0
        imagePullPolicy: IfNotPresent
        args:
          - --source=service
          - --source=ingress
          - --namespace=external-dns
          - --interval=1m
          - --provider=webhook
          - --webhook-provider-url=http://localhost:8888
          - --policy=upsert-only
          - --log-level=debug
          - --registry=noop
          - --domain-filter=example.com
        ports:
        - name: http
          protocol: TCP
          containerPort: 7979
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
      
      # Rackspace webhook sidecar container
      - name: rackspace-webhook
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/rackerlabs/external-dns-rackspace-webhook:latest
        imagePullPolicy: Never
        ports:
        - name: http
          protocol: TCP
          containerPort: 8888
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        env:
        - name: RACKSPACE_USERNAME
          valueFrom:
            secretKeyRef:
              name: external-dns-rackspace-webhook
              key: username
        - name: RACKSPACE_API_KEY
          valueFrom:
            secretKeyRef:
              name: external-dns-rackspace-webhook
              key: api-key
        - name: DOMAIN_FILTER
          value: "example.com"  # Replace with your domain(s), comma-separated
        - name: LOG_LEVEL
          value: "info"
        - name: DRY_RUN
          value: "false"