# Global values
# -- Kubernetes namespace for deployment
namespace: external-dns
# -- Domain filter for DNS management (list of domains)
domainFilter:
  - example.com

# External DNS configuration
externalDns:
  # -- Enable external-dns deployment
  enabled: true
  image:
    # -- External DNS container image repository
    repository: registry.k8s.io/external-dns/external-dns
    # -- External DNS container image tag (defaults to Chart's AppVersion)
    tag: ""
    # -- Image pull policy
    pullPolicy: IfNotPresent
  # -- Number of external-dns replicas
  replicas: 1
  serviceAccount:
    # -- Create service account for external-dns
    create: true
    # -- Service account name
    name: external-dns
  rbac:
    # -- Create RBAC resources for external-dns
    create: true
  service:
    # -- Enable service creation
    enabled: true
    # -- Kubernetes service type
    type: ClusterIP
    # -- Service port number
    port: 7979
  # -- External DNS command arguments
  args:
    - --source=service
    - --source=ingress
    - --interval=10m
    - --provider=webhook
    - --webhook-provider-url=http://localhost:8888
    - --policy=upsert-only
    - --log-level=info
    - --registry=noop
  # -- Pod security context for external-dns
  securityContext:
    fsGroup: 65534
  # -- Container security context for external-dns
  containerSecurityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 65534
  # -- Liveness probe configuration for external-dns
  livenessProbe:
    failureThreshold: 2
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  # -- Readiness probe configuration for external-dns
  readinessProbe:
    failureThreshold: 6
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  # -- Resource limits and requests for external-dns
  resources: {}

# Rackspace Webhook configuration
rackspaceWebhook:
  # -- Enable Rackspace webhook deployment
  enabled: true
  image:
    # -- Rackspace webhook container image repository
    repository: ghcr.io/rackerlabs/external-dns-rackspace-webhook
    # -- Rackspace webhook container image tag (defaults to Chart version)
    tag: ""
    # -- Image pull policy
    pullPolicy: IfNotPresent
  secret:
    # -- Create secret for Rackspace credentials
    create: true
    # -- Secret name for Rackspace credentials
    name: external-dns-rackspace-webhook
    # -- Rackspace username (required for authentication)
    username: ""
    # -- Rackspace API key (required for authentication)
    apiKey: ""
  # -- Environment variables for the Rackspace webhook
  env:
    # -- Logging level (debug, info, warn, error)
    LOG_LEVEL: info
    # -- Enable dry-run mode (true/false)
    DRY_RUN: "false"
    # -- Rackspace Identity API endpoint URL
    RACKSPACE_IDENTITY_ENDPOINT: "https://identity.api.rackspacecloud.com/v2.0/"
  # -- Container security context for Rackspace webhook
  containerSecurityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 65534
  # -- Liveness probe configuration for Rackspace webhook
  livenessProbe:
    failureThreshold: 2
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  # -- Readiness probe configuration for Rackspace webhook
  readinessProbe:
    failureThreshold: 6
    httpGet:
      path: /healthz
      port: http
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  # -- Resource limits and requests for Rackspace webhook
  resources: {}
